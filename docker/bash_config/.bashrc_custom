# Enhanced Bash Configuration for AI Agent Workspace

# Colors for ls
export LS_COLORS='di=1;34:ln=1;36:so=1;35:pi=1;33:ex=1;32:bd=1;33:cd=1;33:su=1;31:sg=1;31:tw=1;34:ow=1;34'

# Enable color support
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# Git branch function - exactly like the working bashrc
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

# Prompt WITHOUT emoji - using exact pattern from working bashrc
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[01;33m\]$(parse_git_branch)\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(parse_git_branch)\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# History configuration
export HISTSIZE=10000
export HISTFILESIZE=20000
export HISTCONTROL=ignoreboth:erasedups
shopt -s histappend
shopt -s checkwinsize

# Additional terminal settings for proper line wrapping
# Update LINES and COLUMNS after each command
shopt -s checkwinsize

# Disable flow control (Ctrl+S/Ctrl+Q) which can interfere with terminal
stty -ixon 2>/dev/null

# Set proper locale for UTF-8 support
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Force terminal size update if not set properly
if [ -z "$COLUMNS" ] || [ "$COLUMNS" -eq 0 ]; then
    eval $(resize 2>/dev/null || echo "export COLUMNS=80 LINES=24")
fi

# Enable programmable completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Custom functions
function mkcd() {
    mkdir -p "$1" && cd "$1"
}

function weather() {
    curl -s "wttr.in/${1:-Berlin}?format=3"
}

function port() {
    lsof -ti:$1
}

# Node.js and npm colors
export FORCE_COLOR=1
export NPM_CONFIG_COLOR=always

# Less colors (for man pages, git log, etc.)
export LESS_TERMCAP_mb=$'\e[1;32m'     # begin blinking
export LESS_TERMCAP_md=$'\e[1;32m'     # begin bold
export LESS_TERMCAP_me=$'\e[0m'        # end mode
export LESS_TERMCAP_se=$'\e[0m'        # end standout-mode
export LESS_TERMCAP_so=$'\e[01;33m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\e[0m'        # end underline
export LESS_TERMCAP_us=$'\e[1;4;31m'   # begin underline

# Welcome message
echo -e "${CYAN}AI Agent Workspace Ready!${RESET}"
echo -e "${YELLOW}Type 'mcp-list' to see MCP servers | 'cf help' for Claude Flow | 'ws' for workspace${RESET}"

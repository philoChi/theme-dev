version: '3.8'

services:
  ai-agent:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=20.18.0
        - PYTHON_VERSION=3.11
    image: ai-agent-workspace-mcp:latest
    container_name: ai-agent-workspace-mcp
    hostname: ai-agent
    command: ["/bin/bash", "-l", "-c", "tail -f /dev/null"]
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETUID
      - SETGID
      - NET_BIND_SERVICE
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    
    # Environment variables
    environment:
      - NODE_ENV=development
      - CLAUDE_FLOW_AUTO_COMMIT=false
      - CLAUDE_FLOW_AUTO_PUSH=false
      - CLAUDE_FLOW_HOOKS_ENABLED=true
      - CLAUDE_FLOW_TELEMETRY_ENABLED=true
      - CLAUDE_FLOW_REMOTE_EXECUTION=true
      - CLAUDE_FLOW_GITHUB_INTEGRATION=true
      - SHOPIFY_CLI_THEME_TOKEN=${SHOPIFY_CLI_THEME_TOKEN}
      - SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
      - SHOPIFY_API_SECRET=${SHOPIFY_API_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - TZ=Europe/Berlin
      # MCP Configuration
      - MCP_ENABLE=true
      - MCP_AUTO_INSTALL=true
      # Enable host access for localhost
      - DOCKER_HOST=host.docker.internal
    
    # Add host access for localhost
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    # Volume mounts
    volumes:
      # Mount the entire project directory
      - ..:/workspace:rw
      # Persist npm cache
      - npm-cache:/home/agent/.npm
      # Persist yarn cache
      - yarn-cache:/home/agent/.cache/yarn
      # Persist Claude Flow data
      - claude-flow-data:/home/agent/.claude-flow
      # Persist Claude configuration and MCP servers (FIXED DUPLICATE MOUNT)
      - claude-config:/home/agent/.claude
      - claude-config-alt:/home/agent/.config/claude
      # Persist bash history (create as volume, not file mount)
      - bash-history:/home/agent/.bash_history_volume
      # SSH keys (if needed) - CONDITIONAL MOUNT
      # - ~/.ssh:/home/agent/.ssh:ro
      # Git config - REMOVED to prevent directory creation issue
      # Git is now properly configured in Dockerfile instead
      # Share host's Claude configuration (read-only) - CONDITIONAL MOUNT
      # - ~/.claude:/home/agent/.claude-host:ro
      # Docker socket (for Docker-in-Docker if needed)
      # - /var/run/docker.sock:/var/run/docker.sock
    
    # Network settings
    networks:
      - ai-agent-network
    ports:
      # Shopify theme development
      - "9292:9292"
      # Node.js apps
      - "3000:3000"
      - "3001:3001"
      # Python/FastAPI
      - "8000:8000"
      - "8080:8080"
      # Additional ports
      - "4000:4000"
      - "5000:5000"
      # MCP Server ports (for multiple servers)
      - "3100:3100"
      - "3101:3101"
      - "3102:3102"
      - "3103:3103"
      - "3104:3104"
      - "3105:3105"
    
    # Keep container running
    stdin_open: true
    tty: true
    
    # Restart policy
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ai-agent-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - ai-agent-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Optional: PostgreSQL for data persistence
  postgres:
    image: postgres:15-alpine
    container_name: ai-agent-postgres
    environment:
      - POSTGRES_USER=agent
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-agent_password}
      - POSTGRES_DB=agent_workspace
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ai-agent-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

networks:
  ai-agent-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  npm-cache:
    driver: local
  yarn-cache:
    driver: local
  claude-flow-data:
    driver: local
  claude-config:
    driver: local
  claude-config-alt:
    driver: local
  bash-history:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
